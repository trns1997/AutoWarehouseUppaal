<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Place global declarations here.
const int numRobots = 3;
const int numPods = 3;
typedef int[0,numRobots-1] robot_id_t;
typedef int[0,numPods-1] pod_id_t;

const int K = 2;
const int MAX_T = 10;
int podPoses[numPods][2] = {
    {3, 2},
    {4, 2},
    {5, 2}
};

const int GRID_ROWS = 10;
const int GRID_COLS = 10;
const int EMPTY = 0;
const int POD = 1;
const int ROBOT = 2;
const int POD_ROWS = (GRID_ROWS-2)/2;
const int POD_COLS = (GRID_COLS-2);
const int NUMPODS = POD_ROWS * POD_COLS;

////////////////////////////////////////////////////////////////////////
// PODS
////////////////////////////////////////////////////////////////////////

const int POD_IDLE = 0;    // @ its place in the grid, available for new tasks
const int POD_TASK = 1;    // assigned to task
const int POD_TAKEN = 2;   // assigned to task taken by robot 

typedef int[POD_IDLE, POD_TAKEN] pod_status_t;

// All the pods
struct {
    int id;                // pod id
    int row, col;          // position in the grid
    pod_status_t status;   // pod status
} pods[NUMPODS] = {
    // grid row 2
    {  0, 2, 1, POD_IDLE},
    {  1, 2, 2, POD_IDLE},
    {  2, 2, 3, POD_IDLE},
    {  3, 2, 4, POD_IDLE},
    {  4, 2, 5, POD_IDLE},
    {  5, 2, 6, POD_IDLE},
    {  6, 2, 7, POD_IDLE},
    {  7, 2, 8, POD_IDLE},
    // grid row 4
    {  8, 4, 1, POD_IDLE},
    {  9, 4, 2, POD_IDLE},
    { 10, 4, 3, POD_IDLE},
    { 11, 4, 4, POD_IDLE},
    { 12, 4, 5, POD_IDLE},
    { 13, 4, 6, POD_IDLE},
    { 14, 4, 7, POD_IDLE},
    { 15, 4, 8, POD_IDLE},
    // grid row 6
    { 16, 6, 1, POD_IDLE},
    { 17, 6, 2, POD_IDLE},
    { 18, 6, 3, POD_IDLE},
    { 19, 6, 4, POD_IDLE},
    { 20, 6, 5, POD_IDLE},
    { 21, 6, 6, POD_IDLE},
    { 22, 6, 7, POD_IDLE},
    { 23, 6, 8, POD_IDLE},
    // grid row 8
    { 24, 8, 1, POD_IDLE},
    { 25, 8, 2, POD_IDLE},
    { 26, 8, 3, POD_IDLE},
    { 27, 8, 4, POD_IDLE},
    { 28, 8, 5, POD_IDLE},
    { 29, 8, 6, POD_IDLE},
    { 30, 8, 7, POD_IDLE},
    { 31, 8, 8, POD_IDLE}
};

////////////////////////////////////////////////////////////////////////
// WAREHOUSE LAYOUT (GRID)
////////////////////////////////////////////////////////////////////////

int grid[GRID_ROWS][GRID_COLS] = {
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
    { 0, 1, 1, 1, 1, 1, 1, 1, 1, 0 },
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
};

// Linear congruential random number generator:
// cycle length = 255

int seed = 1;

int mini_rand()
{
    seed = 17 * seed + 137;
    return seed &amp; 655355;
}

int task_queue[MAX_T];
int task_queue_len = 0;

// Put an element at the end of the queue
bool enqueue_task(int pod)
{
    if (task_queue_len &lt; MAX_T) {
        task_queue[task_queue_len++] = pod;
        return true;
    }
    return false;
}

// Remove the front element of the queue
// Return the pod ID
int dequeue_task()
{
    int i, pod = -1;
    if (task_queue_len &gt; 0) {
        pod = task_queue[0];
        for (i = 1; i &lt; task_queue_len; ++i)
            task_queue[i-1] = task_queue[i];
        task_queue[--task_queue_len] = 0;
    }
    return pod;
}

int count_idle_pods()
{
    int i, n;
    for (i = n = 0; i &lt; NUMPODS; ++i)
        if (pods[i].status == POD_IDLE)
            ++n;
    return n;
}

int select_random_idle_pod()
{
    int idlepods = count_idle_pods();
    int pod = mini_rand() % idlepods;
    int i;

    for (i = 0; i &lt; NUMPODS; ++i) {
        if (pods[i].status == POD_IDLE) {
            if (pod == 0)
                return i;
            --pod;
        }
    }
    return -1;
}

void add_new_task()
{
    // 1. select random idle pod
    int pod;
    int idlepods = count_idle_pods();

    if (idlepods == 0)
        return;

    pod = select_random_idle_pod();

    // 2. add pod to queue
    
    if (enqueue_task(pod))
        pods[pod].status = POD_TASK;
}

int startingPose[2] = {0, 0};
int deliveryPose[2] = {0, 9};
int bottomLeftPose[2] = {9, 0};
chan robot_picked[numRobots];
//chan pod_picked[numPods], pod_dropped[numPods];
chan pod_picked, pod_dropped;
chan human_finished, robot_arrived;
int taskFromQueue;

int taskCounter;
chan task_picked; </declaration>
	<template>
		<name>TaskManager</name>
		<parameter>int T</parameter>
		<declaration>clock time_for_new_item;
pod_id_t list[MAX_T];
int[0,MAX_T-1] len;

// Put an element at the end of the queue
void enqueue(pod_id_t element)
{
        list[len++] = element;
}

// Remove the front element of the queue
void dequeue()
{
        int i = 0;
        len -= 1;
        while (i &lt; len)
        {
                list[i] = list[i + 1];
                i++;
        }
        list[i] = 0;
}

// Returns the front element of the queue
pod_id_t front()
{
   return list[0];
}

// Returns the last element of the queue
pod_id_t tail()
{
   return list[len - 1];
}</declaration>
		<location id="id0" x="0" y="-391">
			<name x="-10" y="-425">Empty</name>
			<label kind="invariant" x="-51" y="-442">time_for_new_item&lt;=T</label>
		</location>
		<location id="id1" x="0" y="-187">
			<name x="8" y="-229">Queue_has_task</name>
			<label kind="invariant" x="8" y="-212">time_for_new_item &lt;= T</label>
		</location>
		<location id="id2" x="0" y="-9">
			<name x="25" y="-8">Queue_Full</name>
			<label kind="invariant" x="25" y="8">time_for_new_item &lt;= T</label>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id2"/>
			<target ref="id2"/>
			<label kind="guard" x="-85" y="59">time_for_new_item&gt;=T</label>
			<nail x="-59" y="51"/>
			<nail x="42" y="51"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id0"/>
			<label kind="select" x="-645" y="-271">r: robot_id_t</label>
			<label kind="guard" x="-645" y="-254">len == 1</label>
			<label kind="synchronisation" x="-645" y="-237">robot_picked[r]!</label>
			<label kind="assignment" x="-645" y="-220">taskFromQueue = front(),
dequeue()</label>
			<nail x="-535" y="-42"/>
			<nail x="-535" y="-348"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id2"/>
			<label kind="select" x="-399" y="-263">p:pod_id_t</label>
			<label kind="guard" x="-476" y="-246">len == MAX_T-1 &amp;&amp; time_for_new_item&gt;=T</label>
			<label kind="assignment" x="-408" y="-229">enqueue(p),
time_for_new_item = 0</label>
			<nail x="-323" y="-306"/>
			<nail x="-323" y="-93"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id1"/>
			<label kind="select" x="373" y="-136">r: robot_id_t</label>
			<label kind="guard" x="373" y="-119">len &gt; 1</label>
			<label kind="synchronisation" x="373" y="-102">robot_picked[r]!</label>
			<label kind="assignment" x="373" y="-85">taskFromQueue = front(),
dequeue()</label>
			<nail x="365" y="-102"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id0"/>
			<label kind="select" x="204" y="-374">r: robot_id_t</label>
			<label kind="guard" x="204" y="-357">len == 1</label>
			<label kind="synchronisation" x="204" y="-340">robot_picked[r]!</label>
			<label kind="assignment" x="204" y="-323">taskFromQueue = front(),
dequeue()</label>
			<nail x="196" y="-187"/>
			<nail x="187" y="-383"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="select" x="-187" y="-162">r: robot_id_t</label>
			<label kind="guard" x="-187" y="-145">len&gt;1</label>
			<label kind="synchronisation" x="-187" y="-94">robot_picked[r]!</label>
			<label kind="assignment" x="-187" y="-128">taskFromQueue = front(),
dequeue()</label>
			<nail x="-76" y="-162"/>
			<nail x="-42" y="-128"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="select" x="-161" y="-280">p: pod_id_t</label>
			<label kind="guard" x="-161" y="-263">len &lt; MAX_T-1 &amp;&amp; time_for_new_item &gt;=T</label>
			<label kind="assignment" x="-161" y="-246">enqueue(p),
time_for_new_item = 0</label>
			<nail x="-34" y="-247"/>
			<nail x="-68" y="-213"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="select" x="0" y="-136">p: pod_id_t</label>
			<label kind="guard" x="0" y="-119">len==MAX_T-1 &amp;&amp; time_for_new_item &gt;= T</label>
			<label kind="assignment" x="0" y="-102">enqueue(p),
time_for_new_item = 0</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="select" x="9" y="-349">p: pod_id_t</label>
			<label kind="guard" x="-127" y="-331">len &lt; MAX_T-1 &amp;&amp; time_for_new_item &gt;= T</label>
			<label kind="assignment" x="9" y="-315">enqueue(p),
time_for_new_item = 0</label>
		</transition>
	</template>
	<template>
		<name>TempTaskManager</name>
		<parameter>int T</parameter>
		<declaration>clock task_clock;</declaration>
		<location id="id3" x="-34" y="-510">
			<name x="-42" y="-561">Empty</name>
			<label kind="invariant" x="-42" y="-544">task_clock&lt;=T</label>
		</location>
		<location id="id4" x="-34" y="-212">
			<name x="-8" y="-238">Tasks_available</name>
			<label kind="invariant" x="-8" y="-221">task_clock&lt;=T</label>
		</location>
		<location id="id5" x="-457" y="-221">
			<name x="-484" y="-272">Error</name>
			<label kind="invariant" x="-484" y="-255">task_clock&lt;=T</label>
		</location>
		<init ref="id3"/>
		<transition>
			<source ref="id5"/>
			<target ref="id4"/>
			<label kind="synchronisation" x="-314" y="-153">task_picked?</label>
			<label kind="assignment" x="-314" y="-187">taskCounter--,
dequeue()</label>
			<nail x="-255" y="-187"/>
		</transition>
		<transition>
			<source ref="id5"/>
			<target ref="id5"/>
			<label kind="guard" x="-620" y="-272">task_clock&gt;=T</label>
			<label kind="assignment" x="-620" y="-255">task_clock=0</label>
			<nail x="-518" y="-255"/>
			<nail x="-518" y="-204"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
			<label kind="guard" x="-425" y="-297">task_clock&gt;=T &amp;&amp; taskCounter == MAX_T</label>
			<label kind="assignment" x="-425" y="-280">task_clock = 0</label>
			<nail x="-229" y="-272"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id4"/>
			<label kind="guard" x="-433" y="-102">task_clock&gt;=T &amp;&amp; taskCounter&lt;MAX_T</label>
			<label kind="assignment" x="-272" y="-85">taskCounter++,
task_clock=0,
add_new_task()</label>
			<nail x="-102" y="-51"/>
			<nail x="-161" y="-102"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id4"/>
			<label kind="guard" x="102" y="-136">taskCounter&gt;1</label>
			<label kind="synchronisation" x="102" y="-85">task_picked?</label>
			<label kind="assignment" x="102" y="-119">taskCounter--,
dequeue()</label>
			<nail x="34" y="-51"/>
			<nail x="93" y="-102"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id3"/>
			<label kind="guard" x="136" y="-391">taskCounter == 1</label>
			<label kind="synchronisation" x="136" y="-340">task_picked?</label>
			<label kind="assignment" x="136" y="-374">taskCounter--,
dequeue()</label>
			<nail x="136" y="-357"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id4"/>
			<label kind="guard" x="-340" y="-408">task_clock &gt;= T</label>
			<label kind="assignment" x="-340" y="-391">taskCounter++,
task_clock=0,
add_new_task()</label>
			<nail x="-212" y="-382"/>
		</transition>
	</template>
	<template>
		<name x="5" y="5">Robot</name>
		<parameter>const robot_id_t id</parameter>
		<declaration>clock time_for_move;
int podID;
int r_x, r_y;</declaration>
		<location id="id6" x="459" y="-518">
			<name x="449" y="-493">Idle</name>
		</location>
		<location id="id7" x="459" y="-671">
			<name x="476" y="-680">stop</name>
			<label kind="invariant" x="476" y="-663">time_for_move &lt;= K</label>
		</location>
		<location id="id8" x="34" y="-1045">
			<name x="-93" y="-1054">up_by_one_row</name>
			<label kind="invariant" x="-119" y="-1037">time_for_move &lt;= K</label>
		</location>
		<location id="id9" x="34" y="-824">
			<name x="17" y="-799">left_to_pod_col</name>
			<label kind="invariant" x="17" y="-782">time_for_move &lt;= K</label>
		</location>
		<location id="id10" x="459" y="-824">
			<name x="416" y="-884">up_to_pod_row</name>
			<label kind="invariant" x="416" y="-901">time_for_move &lt;= K</label>
		</location>
		<location id="id11" x="501" y="-1317">
			<name x="357" y="-1351">up_to_delivery_col</name>
			<label kind="invariant" x="348" y="-1334">time_for_move &lt;= K</label>
		</location>
		<location id="id12" x="-977" y="-1317">
			<name x="-1011" y="-1360">left_to_return_highway_col</name>
			<label kind="invariant" x="-968" y="-1343">time_for_move &lt;= K</label>
		</location>
		<location id="id13" x="-977" y="-943">
			<name x="-1189" y="-952">down_to_pod_row_plus_one</name>
			<label kind="invariant" x="-1147" y="-935">time_for_move &lt;= K</label>
		</location>
		<location id="id14" x="-255" y="-943">
			<name x="-357" y="-926">right_to_pod_col</name>
			<label kind="invariant" x="-382" y="-909">time_for_move &lt;= K</label>
		</location>
		<location id="id15" x="-255" y="-1156">
			<name x="-263" y="-1190">up_by_one</name>
			<label kind="invariant" x="-238" y="-1173">time_for_move &lt;= K</label>
		</location>
		<location id="id16" x="-671" y="-1156">
			<name x="-833" y="-1198">left_to_return_highway</name>
			<label kind="invariant" x="-824" y="-1181">time_for_move &lt;= K</label>
		</location>
		<location id="id17" x="-671" y="-518">
			<name x="-697" y="-484">down_to_idle_row</name>
			<label kind="invariant" x="-697" y="-467">time_for_move &lt;= K</label>
		</location>
		<location id="id18" x="-42" y="-518">
			<name x="-102" y="-492">down_to_idle_col</name>
			<label kind="invariant" x="-102" y="-476">time_for_move &lt;= K</label>
		</location>
		<location id="id19" x="501" y="-1045">
			<name x="433" y="-1011">right_to_delivery_col</name>
			<label kind="invariant" x="433" y="-994">time_for_move &lt;= K</label>
		</location>
		<init ref="id6"/>
		<transition>
			<source ref="id11"/>
			<target ref="id11"/>
			<label kind="guard" x="237" y="-1275">r_y == deliveryPose[1]</label>
			<label kind="synchronisation" x="237" y="-1258">robot_arrived!</label>
			<nail x="433" y="-1215"/>
			<nail x="390" y="-1292"/>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id18"/>
			<label kind="guard" x="-102" y="-645">r_x &gt; startingPose[0] &amp;&amp; time_for_move &gt;= K</label>
			<label kind="assignment" x="-102" y="-620">r_x -= 1,
time_for_move = 0</label>
			<nail x="-110" y="-586"/>
			<nail x="25" y="-586"/>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id17"/>
			<label kind="guard" x="-1054" y="-544">r_y &gt; startingPose[1] &amp;&amp; time_for_move &gt;= K</label>
			<label kind="assignment" x="-884" y="-518">r_y -= 1,
time_for_move = 0</label>
			<nail x="-731" y="-569"/>
			<nail x="-731" y="-458"/>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id16"/>
			<label kind="guard" x="-612" y="-1079">r_x &lt; bottomLeftPose[0] &amp;&amp; time_for_move &gt;= K</label>
			<label kind="assignment" x="-612" y="-1062">r_x += 1,
time_for_move = 0</label>
			<nail x="-638" y="-1053"/>
			<nail x="-587" y="-1104"/>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id14"/>
			<label kind="guard" x="-178" y="-969">r_x &gt; podPoses[podID][0] &amp;&amp; time_for_move &lt;= K</label>
			<label kind="assignment" x="-178" y="-943">r_x -= 1,
time_for_move = 0</label>
			<nail x="-187" y="-1003"/>
			<nail x="-187" y="-901"/>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id13"/>
			<label kind="guard" x="-1266" y="-875">r_y &gt; podPoses[podID][1] - 1 &amp;&amp; time_for_move &gt;= K</label>
			<label kind="assignment" x="-1036" y="-850">r_y -= 1,
time_for_move = 0</label>
			<nail x="-1036" y="-884"/>
			<nail x="-926" y="-884"/>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id12"/>
			<label kind="guard" x="-1402" y="-1334">r_x &lt; bottomLeftPose[0] &amp;&amp; time_for_move &gt;= K</label>
			<label kind="assignment" x="-1198" y="-1317">r_x += 1,
time_for_move = 0</label>
			<nail x="-1062" y="-1368"/>
			<nail x="-1062" y="-1266"/>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id11"/>
			<label kind="guard" x="603" y="-1351">r_y &lt; deliveryPose[1] &amp;&amp; time_for_move &gt;= K</label>
			<label kind="assignment" x="603" y="-1334">r_y += 1,
time_for_move = 0</label>
			<nail x="586" y="-1368"/>
			<nail x="586" y="-1275"/>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id19"/>
			<label kind="guard" x="577" y="-1071">r_x &gt; deliveryPose[0] &amp;&amp; time_for_move &gt;= K</label>
			<label kind="assignment" x="577" y="-1054">r_x -= 1,
time_for_move = 0</label>
			<nail x="560" y="-1113"/>
			<nail x="560" y="-1011"/>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id9"/>
			<label kind="guard" x="-399" y="-850">r_x &lt; podPoses[podID][0] &amp;&amp; time_for_move &gt;= K</label>
			<label kind="assignment" x="-178" y="-833">r_x +=1,
time_for_move = 0</label>
			<nail x="-42" y="-884"/>
			<nail x="-42" y="-765"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id10"/>
			<label kind="guard" x="535" y="-807">r_y &lt; podPoses[podID][1] &amp;&amp; time_for_move &gt;= K</label>
			<label kind="assignment" x="535" y="-841">r_y += 1,
time_for_move = 0</label>
			<nail x="518" y="-867"/>
			<nail x="518" y="-790"/>
		</transition>
		<transition>
			<source ref="id18"/>
			<target ref="id6"/>
			<label kind="guard" x="68" y="-543">r_x == startingPose[0]</label>
		</transition>
		<transition>
			<source ref="id17"/>
			<target ref="id18"/>
			<label kind="guard" x="-484" y="-544">r_y == startingPose[1] &amp;&amp; time_for_move &gt;= K</label>
			<label kind="assignment" x="-416" y="-510">r_x -= 1,
time_for_move = 0</label>
		</transition>
		<transition>
			<source ref="id16"/>
			<target ref="id17"/>
			<label kind="guard" x="-654" y="-799">r_x == bottomLeftPose[0] &amp;&amp; time_for_move &gt;= K</label>
			<label kind="assignment" x="-654" y="-773">r_y -= 1,
time_for_move = 0</label>
		</transition>
		<transition>
			<source ref="id15"/>
			<target ref="id16"/>
			<label kind="guard" x="-637" y="-1181">r_y == podPoses[podID][1] &amp;&amp; time_for_move &gt;= K</label>
			<label kind="synchronisation" x="-561" y="-1122">pod_dropped[podID]!</label>
			<label kind="assignment" x="-561" y="-1156">r_x += 1,
time_for_move = 0</label>
		</transition>
		<transition>
			<source ref="id14"/>
			<target ref="id15"/>
			<label kind="guard" x="-246" y="-1113">r_x == podPoses[podID][0] &amp;&amp; time_for_move &gt;= K</label>
			<label kind="assignment" x="-246" y="-1087">r_y += 1,
time_for_move = 0</label>
		</transition>
		<transition>
			<source ref="id13"/>
			<target ref="id14"/>
			<label kind="guard" x="-663" y="-969">r_y == podPoses[podID][1] - 1 &amp;&amp; time_for_move &gt;= K</label>
			<label kind="assignment" x="-569" y="-935">r_x -= 1,
time_for_move = 0</label>
		</transition>
		<transition>
			<source ref="id12"/>
			<target ref="id13"/>
			<label kind="guard" x="-1325" y="-1156">r_x == bottomLeftPose[0] &amp;&amp; time_for_move &gt;= K</label>
			<label kind="assignment" x="-1113" y="-1130">r_y -= 1,
time_for_move = 0</label>
		</transition>
		<transition>
			<source ref="id11"/>
			<target ref="id12"/>
			<label kind="guard" x="-314" y="-1343">r_y == deliveryPose[1] &amp;&amp; time_for_move &gt;= K</label>
			<label kind="synchronisation" x="-314" y="-1275">human_finished?</label>
			<label kind="assignment" x="-314" y="-1309">r_x += 1,
time_for_move = 0</label>
		</transition>
		<transition>
			<source ref="id19"/>
			<target ref="id11"/>
			<label kind="guard" x="509" y="-1232">r_x == deliveryPose[0] &amp;&amp; time_for_move &gt;= K</label>
			<label kind="assignment" x="509" y="-1215">r_y += 1,
time_for_move = 0</label>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id19"/>
			<label kind="guard" x="68" y="-1079">r_y == podPoses[podID][1] + 1 &amp;&amp; time_for_move &gt;= K</label>
			<label kind="assignment" x="144" y="-1037">r_x -=1,
time_for_move = 0</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id8"/>
			<label kind="guard" x="42" y="-926">r_x == podPoses[podID][0] &amp;&amp; time_for_move &gt;= K</label>
			<label kind="assignment" x="42" y="-909">r_y += 1,
time_for_move = 0</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="guard" x="76" y="-850">r_y == podPoses[podID][1] &amp;&amp; time_for_move &gt;= K</label>
			<label kind="assignment" x="161" y="-816">r_x +=1,
time_for_move = 0</label>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id10"/>
			<label kind="guard" x="467" y="-782">time_for_move &gt;= K</label>
			<label kind="synchronisation" x="467" y="-731">pod_picked[podID]!</label>
			<label kind="assignment" x="467" y="-765">r_y +=1,
time_for_move = 0</label>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="467" y="-603">robot_picked[id]?</label>
			<label kind="assignment" x="467" y="-578">podID = taskFromQueue,
time_for_move = 0</label>
		</transition>
	</template>
	<template>
		<name>TempRobot</name>
		<parameter>int K</parameter>
		<declaration>clock robot_clock;

int mypod_id;
int my_row, my_col;
int pod_row, pod_col;

void pickTask(){
    mypod_id = dequeue_task();
    pod_row = pods[mypod_id].row;
    pod_col = pods[mypod_id].col;
}

void moveToPod(){

}

void moveToDelivery(){

}

void returnToPod(){

}

void returnToIdle(){

}</declaration>
		<location id="id20" x="-1096" y="833">
			<name x="-1146" y="824">Idle</name>
		</location>
		<location id="id21" x="-339" y="833">
			<name x="-415" y="790">Move_To_Pod</name>
			<label kind="invariant" x="-424" y="807">robot_clock&lt;=K</label>
		</location>
		<location id="id22" x="-341" y="561">
			<name x="-324" y="519">Move_To_Delivery</name>
			<label kind="invariant" x="-324" y="536">robot_clock&lt;=K</label>
		</location>
		<location id="id23" x="-340" y="408">
			<name x="-350" y="374">Arrived_To_Delivery</name>
		</location>
		<location id="id24" x="-595" y="408">
			<name x="-612" y="357">Return_To_Pod</name>
			<label kind="invariant" x="-612" y="374">robot_clock&lt;=K</label>
		</location>
		<location id="id25" x="-1096" y="408">
			<name x="-1105" y="357">Return_To_Idle</name>
			<label kind="invariant" x="-1105" y="374">robot_clock&lt;=K</label>
		</location>
		<init ref="id20"/>
		<transition>
			<source ref="id25"/>
			<target ref="id25"/>
			<label kind="guard" x="-1283" y="365">robot_clock&gt;=K</label>
			<label kind="assignment" x="-1283" y="382">robot_clock=0,
returnToIdle()</label>
			<nail x="-1164" y="365"/>
			<nail x="-1164" y="433"/>
		</transition>
		<transition>
			<source ref="id25"/>
			<target ref="id20"/>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id25"/>
			<label kind="guard" x="-926" y="382">robot_clock &gt;= K</label>
			<label kind="synchronisation" x="-926" y="408">pod_dropped!</label>
			<label kind="assignment" x="-926" y="425">robot_clock=0</label>
		</transition>
		<transition>
			<source ref="id24"/>
			<target ref="id24"/>
			<label kind="guard" x="-629" y="459">robot_clock&gt;=K</label>
			<label kind="assignment" x="-629" y="476">returnToPod(),
robot_clock=0</label>
			<nail x="-561" y="459"/>
			<nail x="-620" y="459"/>
		</transition>
		<transition>
			<source ref="id23"/>
			<target ref="id24"/>
			<label kind="synchronisation" x="-527" y="391">human_finished?</label>
			<label kind="assignment" x="-527" y="408">robot_clock=0</label>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id23"/>
			<label kind="synchronisation" x="-340" y="459">robot_arrived!</label>
		</transition>
		<transition>
			<source ref="id22"/>
			<target ref="id22"/>
			<label kind="guard" x="-272" y="603">robot_clock&gt;=K</label>
			<label kind="assignment" x="-272" y="620">robot_clock=0,
moveToDelivery()</label>
			<nail x="-297" y="637"/>
			<nail x="-255" y="578"/>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id22"/>
			<label kind="guard" x="-331" y="697">robot_clock&gt;=K</label>
			<label kind="synchronisation" x="-331" y="731">pod_picked!</label>
			<label kind="assignment" x="-331" y="714">robot_clock=0</label>
		</transition>
		<transition>
			<source ref="id21"/>
			<target ref="id21"/>
			<label kind="guard" x="-364" y="892">robot_clock&gt;=K</label>
			<label kind="assignment" x="-364" y="909">robot_clock=0,
moveToPod()</label>
			<nail x="-381" y="892"/>
			<nail x="-305" y="892"/>
		</transition>
		<transition>
			<source ref="id20"/>
			<target ref="id21"/>
			<label kind="guard" x="-943" y="807">taskCounter&gt;0</label>
			<label kind="synchronisation" x="-943" y="867">task_picked!</label>
			<label kind="assignment" x="-943" y="833">robot_clock=0,
pickTask()</label>
		</transition>
	</template>
	<template>
		<name>Human</name>
		<parameter>int H</parameter>
		<declaration>clock time_for_task;</declaration>
		<location id="id26" x="-127" y="-297">
			<name x="-137" y="-331">wait</name>
		</location>
		<location id="id27" x="-127" y="-76">
			<name x="-161" y="-59">working</name>
			<label kind="invariant" x="-161" y="-42">time_for_task &lt;=H</label>
		</location>
		<init ref="id26"/>
		<transition>
			<source ref="id27"/>
			<target ref="id26"/>
			<label kind="guard" x="-408" y="-187">time_for_task &gt;= H</label>
			<label kind="synchronisation" x="-391" y="-170">human_finished!</label>
			<nail x="-263" y="-178"/>
		</transition>
		<transition>
			<source ref="id26"/>
			<target ref="id27"/>
			<label kind="synchronisation" x="-119" y="-195">robot_arrived?</label>
			<label kind="assignment" x="-119" y="-212">time_for_task = 0</label>
		</transition>
	</template>
	<template>
		<name>Pod</name>
		<parameter>const pod_id_t id</parameter>
		<location id="id28" x="-126" y="-263">
			<name x="-170" y="-306">pod_available</name>
		</location>
		<location id="id29" x="-127" y="-127">
			<name x="-178" y="-110">pod_not_available</name>
		</location>
		<init ref="id28"/>
		<transition>
			<source ref="id29"/>
			<target ref="id28"/>
			<label kind="synchronisation" x="-25" y="-212">pod_dropped[id]?</label>
			<nail x="-34" y="-195"/>
		</transition>
		<transition>
			<source ref="id28"/>
			<target ref="id29"/>
			<label kind="synchronisation" x="-238" y="-212">pod_picked[id]?</label>
		</transition>
	</template>
	<template>
		<name>TempPod</name>
		<location id="id30" x="119" y="25">
			<name x="75" y="-18">pod_available</name>
		</location>
		<location id="id31" x="123" y="167">
			<name x="72" y="184">pod_not_available</name>
		</location>
		<init ref="id30"/>
		<transition>
			<source ref="id31"/>
			<target ref="id30"/>
			<label kind="synchronisation" x="221" y="85">pod_dropped?</label>
			<nail x="216" y="99"/>
		</transition>
		<transition>
			<source ref="id30"/>
			<target ref="id31"/>
			<label kind="synchronisation" x="12" y="82">pod_picked?</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
Task = TempTaskManager(5);
H = Human(5);
R = TempRobot(5);

// List one or more processes to be composed into a system.
system R, Pod, Task, H;
    </system>
	<queries>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
	</queries>
</nta>
